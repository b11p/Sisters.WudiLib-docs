# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run docs:build
    - name: Compression
      id: brotli
      uses: charlesworth/compress-action@1.0.0
      with:
        target-directory: 'docs/.vuepress/dist'
    - name: Push to deploy branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/.vuepress/dist
    - name: Deploy using SSH
      uses: appleboy/ssh-action@master
      env:
        DEPLOY_DIR: /home/${{ secrets.SSH_USERNAME }}/www/wudilib.b11p.com
        BRANCH: gh-pages
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_URL: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: DEPLOY_DIR,BRANCH,TOKEN,REPO_URL
        script_stop: true
        script: |
          mkdir -p $DEPLOY_DIR
          cd $DEPLOY_DIR
          git init
          if git remote | grep -q -P '^b11p-git-pages$'; then
              echo "Cleaning old remote"
              git remote remove b11p-git-pages
          fi
          git remote add -t $BRANCH b11p-git-pages $REPO_URL
          git fetch -v --set-upstream b11p-git-pages --depth 1 --auto-gc
          git reset --hard remotes/b11p-git-pages/$BRANCH --
          git reflog expire --expire-unreachable=all --all --verbose
          git gc --prune=all
          git remote remove b11p-git-pages
