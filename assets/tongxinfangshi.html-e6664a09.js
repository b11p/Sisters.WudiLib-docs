import{_ as e,p as c,q as t,a1 as o}from"./framework-5866ffd3.js";const a={},i=o('<h1 id="扩展-wudilib-通信方式" tabindex="-1"><a class="header-anchor" href="#扩展-wudilib-通信方式" aria-hidden="true">#</a> 扩展 WudiLib 通信方式</h1><p>目前 WudiLib 已支持 OneBot 全部通信方式。如果您想继续扩展，也是可以做到的。</p><h2 id="扩展-api-通信方式" tabindex="-1"><a class="header-anchor" href="#扩展-api-通信方式" aria-hidden="true">#</a> 扩展 API 通信方式</h2><p>扩展 API 通信方式非常简单，只需要继承 <code>HttpApiClient</code> 类，然后重写 <code>CallRawAsync</code> 和/或 <code>CallRawJObjectAsync</code> 方法即可。</p><h2 id="扩展事件上报通信方式" tabindex="-1"><a class="header-anchor" href="#扩展事件上报通信方式" aria-hidden="true">#</a> 扩展事件上报通信方式</h2><p>继承 <code>ApiPostListener</code> 类，收到事件时调用 <code>ProcessPost(string content)</code>（如果你不需要自己处理反序列化）或 <code>ProcessPost(JObject contentObject)</code>（如果你已经反序列化成 <code>JObject</code> 对象）即可。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>扩展上报通信方式与扩展事件类型都需要继承 <code>ApiPostListener</code> 类，某些情况下有冲突，难以同时扩展。未来版本将会解决这个问题。</p></div>',7),d=[i];function n(s,r){return c(),t("div",null,d)}const l=e(a,[["render",n],["__file","tongxinfangshi.html.vue"]]);export{l as default};
