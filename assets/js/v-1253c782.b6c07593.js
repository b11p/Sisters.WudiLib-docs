"use strict";(self.webpackChunksisters_wudilib_docs=self.webpackChunksisters_wudilib_docs||[]).push([[89],{8171:(e,t,a)=>{a.r(t),a.d(t,{data:()=>i});const i={key:"v-1253c782",path:"/tongxinfangshi/",title:"通信方式",lang:"zh-CN",frontmatter:{title:"通信方式",lang:"zh-CN"},excerpt:"",headers:[{level:2,title:"HTTP 和 HTTP POST",slug:"http-和-http-post",children:[{level:3,title:"使用",slug:"使用",children:[]}]},{level:2,title:"正向 WebSocket",slug:"正向-websocket",children:[{level:3,title:"使用",slug:"使用-1",children:[]}]},{level:2,title:"反向 WebSocket",slug:"反向-websocket",children:[{level:3,title:"使用",slug:"使用-2",children:[]}]}],filePathRelative:"tongxinfangshi/README.md"}},9603:(e,t,a)=>{a.r(t),a.d(t,{default:()=>w});var i=a(6252);const l=(0,i.uE)('<h1 id="通信方式" tabindex="-1"><a class="header-anchor" href="#通信方式" aria-hidden="true">#</a> 通信方式</h1><p>WudiLib 支持 OneBot 标准全部四种通信方式，包括</p><ul><li>HTTP 和 HTTP POST</li><li>正向 WebSocket</li><li>反向 WebSocket</li></ul><h2 id="http-和-http-post" tabindex="-1"><a class="header-anchor" href="#http-和-http-post" aria-hidden="true">#</a> HTTP 和 HTTP POST</h2><p>HTTP (POST) 的优点包括实现简单、无需处理重连等，缺点是每次上报都需要建立 HTTP 连接，比较消耗资源，而且需要 OneBot 服务器和业务逻辑服务器都可连接，或者在同一台机器上。</p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3>',6),n=(0,i.Uk)("HTTP 和 HTTP POST 是最基础的通信方式，也是 WudiLib 最早实现的通信方式。在“"),h=(0,i.Uk)("快速上手"),r=(0,i.Uk)("”中也是以此为例进行介绍，此处不再赘述。"),d=(0,i._)("h2",{id:"正向-websocket",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#正向-websocket","aria-hidden":"true"},"#"),(0,i.Uk)(" 正向 WebSocket")],-1),s=(0,i._)("p",null,"正向 WebSocket 可以用于业务服务器无法被连接，但是 OneBot 服务器可连接的情况，也可以与 HTTP 通信方式配合使用。",-1),o=(0,i._)("h3",{id:"使用-1",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#使用-1","aria-hidden":"true"},"#"),(0,i.Uk)(" 使用")],-1),c=(0,i.Uk)("见"),u=(0,i.Uk)("正向 WebSocket"),k=(0,i.Uk)("。"),b=(0,i._)("h2",{id:"反向-websocket",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#反向-websocket","aria-hidden":"true"},"#"),(0,i.Uk)(" 反向 WebSocket")],-1),T=(0,i._)("p",null,"反向 WebSocket 可以用于业务服务器可以被连接，但 OneBot 服务器无法被连接的情况，也可以用于同一业务服务器连接多个 OneBot 服务器（多个 QQ 号）。",-1),p=(0,i._)("h3",{id:"使用-2",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#使用-2","aria-hidden":"true"},"#"),(0,i.Uk)(" 使用")],-1),f=(0,i.Uk)("见"),g=(0,i.Uk)("反向 WebSocket"),_=(0,i.Uk)("。"),P={},w=(0,a(3744).Z)(P,[["render",function(e,t){const a=(0,i.up)("RouterLink");return(0,i.wg)(),(0,i.iD)(i.HY,null,[l,(0,i._)("p",null,[n,(0,i.Wm)(a,{to:"/zhinan/kuaisushangshou.html"},{default:(0,i.w5)((()=>[h])),_:1}),r]),d,s,o,(0,i._)("p",null,[c,(0,i.Wm)(a,{to:"/tongxinfangshi/zhengxiang-websocket.html"},{default:(0,i.w5)((()=>[u])),_:1}),k]),b,T,p,(0,i._)("p",null,[f,(0,i.Wm)(a,{to:"/tongxinfangshi/fanxiang-websocket.html"},{default:(0,i.w5)((()=>[g])),_:1}),_])],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{for(const[a,i]of t)e[a]=i;return e}}}]);