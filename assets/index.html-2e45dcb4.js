import{_ as i,M as h,p as s,q as d,R as t,t as e,N as n,V as o,a1 as c}from"./framework-5866ffd3.js";const r={},l=c('<h1 id="通信方式" tabindex="-1"><a class="header-anchor" href="#通信方式" aria-hidden="true">#</a> 通信方式</h1><p>WudiLib 支持 OneBot 标准全部四种通信方式，包括</p><ul><li>HTTP 和 HTTP POST</li><li>正向 WebSocket</li><li>反向 WebSocket</li></ul><h2 id="http-和-http-post" tabindex="-1"><a class="header-anchor" href="#http-和-http-post" aria-hidden="true">#</a> HTTP 和 HTTP POST</h2><p>HTTP (POST) 的优点包括实现简单、无需处理重连等，缺点是每次上报都需要建立 HTTP 连接，比较消耗资源，而且需要 OneBot 服务器和业务逻辑服务器都可连接，或者在同一台机器上。</p><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h3>',6),_=t("h2",{id:"正向-websocket",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#正向-websocket","aria-hidden":"true"},"#"),e(" 正向 WebSocket")],-1),u=t("p",null,"正向 WebSocket 可以用于业务服务器无法被连接，但是 OneBot 服务器可连接的情况，也可以与 HTTP 通信方式配合使用。",-1),b=t("h3",{id:"使用-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#使用-1","aria-hidden":"true"},"#"),e(" 使用")],-1),T=t("h2",{id:"反向-websocket",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#反向-websocket","aria-hidden":"true"},"#"),e(" 反向 WebSocket")],-1),p=t("p",null,"反向 WebSocket 可以用于业务服务器可以被连接，但 OneBot 服务器无法被连接的情况，也可以用于同一业务服务器连接多个 OneBot 服务器（多个 QQ 号）。",-1),f=t("h3",{id:"使用-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#使用-2","aria-hidden":"true"},"#"),e(" 使用")],-1);function k(x,P){const a=h("RouterLink");return s(),d("div",null,[l,t("p",null,[e("HTTP 和 HTTP POST 是最基础的通信方式，也是 WudiLib 最早实现的通信方式。在“"),n(a,{to:"/zhinan/kuaisushangshou.html"},{default:o(()=>[e("快速上手")]),_:1}),e("”中也是以此为例进行介绍，此处不再赘述。")]),_,u,b,t("p",null,[e("见"),n(a,{to:"/tongxinfangshi/zhengxiang-websocket.html"},{default:o(()=>[e("正向 WebSocket")]),_:1}),e("。")]),T,p,f,t("p",null,[e("见"),n(a,{to:"/tongxinfangshi/fanxiang-websocket.html"},{default:o(()=>[e("反向 WebSocket")]),_:1}),e("。")])])}const m=i(r,[["render",k],["__file","index.html.vue"]]);export{m as default};
