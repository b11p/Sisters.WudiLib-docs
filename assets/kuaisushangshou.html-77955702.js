import{_ as c,M as p,p as i,q as l,R as s,t as n,N as a,V as u,a1 as t}from"./framework-5866ffd3.js";const r={},d=s("h1",{id:"快速上手",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#快速上手","aria-hidden":"true"},"#"),n(" 快速上手")],-1),k=s("p",null,"本页将指导您快速使用 go-cqhttp 建立起可以简单回应消息的机器人。",-1),h=s("h2",{id:"准备-go-cqhttp",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#准备-go-cqhttp","aria-hidden":"true"},"#"),n(" 准备 go-cqhttp")],-1),m={href:"https://github.com/Mrs4s/go-cqhttp/releases",target:"_blank",rel:"noopener noreferrer"},v=t(`<p>在 <code>account</code> 节的 <code>uin</code> 和 <code>password</code> 字段填入机器人 QQ 号和密码。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">account</span><span class="token punctuation">:</span>
  <span class="token key atrule">uin</span><span class="token punctuation">:</span> <span class="token number">1233456</span> <span class="token comment"># QQ账号</span>
  <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&#39;mima&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>servers</code> 节配置 HTTP 和 HTTP POST 通信方式</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">servers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">http</span><span class="token punctuation">:</span>
      <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5700</span>
      <span class="token key atrule">post</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">&#39;http://localhost:6700/&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),g={class:"custom-container tip"},b=s("p",{class:"custom-container-title"},"提示",-1),_={href:"https://onebot.page.moe/ecosystem.html#onebot-%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},y=s("p",null,"配置完毕后，再次启动 go-cqhttp，按提示处理登录认证，当出现群和好友数量时即为登录成功。当进行后面的步骤时，请确保 go-cqhttp 一直正常运行，不要关闭。",-1),f=s("h2",{id:"新建项目并添加-nuget-包",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#新建项目并添加-nuget-包","aria-hidden":"true"},"#"),n(" 新建项目并添加 nuget 包")],-1),w={href:"https://www.nuget.org/packages/Sisters.WudiLib",target:"_blank",rel:"noopener noreferrer"},q=s("h2",{id:"设置-onebot-api-并发送测试消息",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#设置-onebot-api-并发送测试消息","aria-hidden":"true"},"#"),n(" 设置 OneBot API 并发送测试消息")],-1),x={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/whats-new/csharp-7#async-main",target:"_blank",rel:"noopener noreferrer"},L=s("code",null,"Main",-1),M=t(`<div class="custom-container warning"><p class="custom-container-title">注意</p><p>请确保你已经添加机器人为好友，以接收私聊消息。</p></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Sisters<span class="token punctuation">.</span>WudiLib</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> httpApi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpApiClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
httpApi<span class="token punctuation">.</span>ApiAddress <span class="token operator">=</span> <span class="token string">&quot;http://localhost:5700/&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> privateResponse <span class="token operator">=</span> <span class="token keyword">await</span> httpApi<span class="token punctuation">.</span><span class="token function">SendPrivateMessageAsync</span><span class="token punctuation">(</span><span class="token number">12345678</span><span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译并执行程序，如果所有步骤都被正确完成，则你应该可以收到机器人发来的私聊消息。</p><h2 id="配置消息监听" tabindex="-1"><a class="header-anchor" href="#配置消息监听" aria-hidden="true">#</a> 配置消息监听</h2><p>消息监听可以让机器人收到消息或事件时进行处理。要监听并处理消息，需要先编写事件处理器的方法。</p><p>现在，让我们继续添加以下方法。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Sisters<span class="token punctuation">.</span>WudiLib<span class="token punctuation">.</span>Posts</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token class-name">Message</span> <span class="token operator">=</span> <span class="token class-name">Sisters<span class="token punctuation">.</span>WudiLib<span class="token punctuation">.</span>SendingMessage</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token class-name">MessageContext</span> <span class="token operator">=</span> <span class="token class-name">Sisters<span class="token punctuation">.</span>WudiLib<span class="token punctuation">.</span>Posts<span class="token punctuation">.</span>Message</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">OnMessageAsync</span><span class="token punctuation">(</span><span class="token class-name">HttpApiClient</span> api<span class="token punctuation">,</span> <span class="token class-name">MessageContext</span> message<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">.</span>Text <span class="token operator">==</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">SendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>Endpoint<span class="token punctuation">,</span> <span class="token string">&quot;Hello, WudiLib!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Endpoint 代表消息接收/发送的节点。使用 Endpoint 可以让 bot 同时处理私聊和群聊消息，而无需分别编写代码。</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),A={class:"custom-container tip"},S=s("p",{class:"custom-container-title"},"提示",-1),E=s("code",null,"Sisters.WudiLib.Message",-1),W=s("code",null,"Sisters.WudiLib.Posts.Message",-1),P=s("code",null,"Sisters.WudiLib.SendingMessage",-1),T=s("code",null,"Sisters.WudiLib.Message",-1),C={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/using-directive",target:"_blank",rel:"noopener noreferrer"},B=s("em",null,"using 别名指令",-1),H=t(`<p>然后在 <code>Main</code> 方法中继续添加下列代码。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> listener <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ApiPostListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
listener<span class="token punctuation">.</span>ApiClient <span class="token operator">=</span> httpApi<span class="token punctuation">;</span> <span class="token comment">// 上面所示客户端的实例，将作为参数传给事件处理器，便于进行各种操作。</span>
listener<span class="token punctuation">.</span>PostAddress <span class="token operator">=</span> <span class="token string">&quot;http://localhost:6700/&quot;</span><span class="token punctuation">;</span>
listener<span class="token punctuation">.</span><span class="token function">StartListen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
listener<span class="token punctuation">.</span>MessageEvent <span class="token operator">+=</span> <span class="token punctuation">(</span>api<span class="token punctuation">,</span> message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">OnMessageAsync</span><span class="token punctuation">(</span>api<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetAwaiter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻止程序退出。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，我们已经配置好了处理器。运行程序并向 bot 发消息测试，当 bot 收到内容为“hello”的消息时，就会回复“Hello, WudiLib!”。</p><h2 id="进阶内容" tabindex="-1"><a class="header-anchor" href="#进阶内容" aria-hidden="true">#</a> 进阶内容</h2>`,4);function Q(N,O){const e=p("ExternalLinkIcon"),o=p("RouterLink");return i(),l("div",null,[d,k,h,s("p",null,[n("下载最新版本的 "),s("a",m,[n("go-cqhttp"),a(e)]),n("，然后运行，此时 go-cqhttp 将会生成配置文件并退出。打开生成的配置文件，按以下说明修改。")]),v,s("div",g,[b,s("p",null,[n("除了 go-cqhttp，您还可以使用任何兼容的 "),s("a",_,[n("OneBot 实现"),a(e)]),n("，这些实现的配置方式略有不同。如要使用，请查阅对应项目的文档。")])]),y,f,s("p",null,[n("新建控制台项目，用 IDE 或命令行添加 nuget 包 "),s("a",w,[n("Sisters.WudiLib"),a(e)]),n("。")]),q,s("p",null,[s("a",x,[n("将 "),L,n(" 方法改为异步"),a(e)]),n("，然后添加下列代码，并将数字改为你的 QQ 号（不是机器人的）。")]),M,s("div",A,[S,s("p",null,[n("由于 "),E,n(" 与 "),W,n(" 常常出现命名冲突，同时 "),P,n(" 也是比 "),T,n(" 更常用的类，此处使用 "),s("a",C,[B,a(e)]),n("导入了这两个类。")])]),H,s("p",null,[n("请前往"),a(o,{to:"/zhinan/jinjie-wudilib.html"},{default:u(()=>[n("进阶 WudiLib")]),_:1}),n(" 继续学习。")])])}const V=c(r,[["render",Q],["__file","kuaisushangshou.html.vue"]]);export{V as default};
